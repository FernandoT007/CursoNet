{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.10.0.0",
        "fileVersion": "4.10.0-3.24216.12 (3af0081a)",
        "semanticVersion": "4.10.0",
        "language": "en-GB"
      },
      "results": [
        {
          "ruleId": "S3376",
          "level": "warning",
          "message": "Make this class name end with 'Exception'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/OneDrive/Trabajo/TecyLab/Curso%20Net%20y%20AWS/semana%2012/Estudiantes/src/Estudiantes/Estudiantes.Application/Exceptions/ValidationExceptions.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 14,
                  "endLine": 3,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6672",
          "level": "warning",
          "message": "Update this logger to use its enclosing type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/OneDrive/Trabajo/TecyLab/Curso%20Net%20y%20AWS/semana%2012/Estudiantes/src/Estudiantes/Estudiantes.Application/Abstractions/Behaviors/LoggingBehavior.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 36,
                  "endLine": 13,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2139",
          "level": "warning",
          "message": "Either log this exception and handle it, or rethrow it with some contextual information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/OneDrive/Trabajo/TecyLab/Curso%20Net%20y%20AWS/semana%2012/Estudiantes/src/Estudiantes/Estudiantes.Application/Abstractions/Behaviors/LoggingBehavior.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 26,
                  "endLine": 31,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/OneDrive/Trabajo/TecyLab/Curso%20Net%20y%20AWS/semana%2012/Estudiantes/src/Estudiantes/Estudiantes.Application/Abstractions/Behaviors/LoggingBehavior.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 13,
                  "endLine": 33,
                  "endColumn": 82
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/OneDrive/Trabajo/TecyLab/Curso%20Net%20y%20AWS/semana%2012/Estudiantes/src/Estudiantes/Estudiantes.Application/Abstractions/Behaviors/LoggingBehavior.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 13,
                  "endLine": 34,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Logging statement.",
              "1": "Thrown exception."
            }
          }
        },
        {
          "ruleId": "S2629",
          "level": "warning",
          "message": "Don't use string interpolation in logging message templates.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/OneDrive/Trabajo/TecyLab/Curso%20Net%20y%20AWS/semana%2012/Estudiantes/src/Estudiantes/Estudiantes.Application/Abstractions/Behaviors/LoggingBehavior.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 36,
                  "endLine": 26,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2629",
          "level": "warning",
          "message": "Don't use string interpolation in logging message templates.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/OneDrive/Trabajo/TecyLab/Curso%20Net%20y%20AWS/semana%2012/Estudiantes/src/Estudiantes/Estudiantes.Application/Abstractions/Behaviors/LoggingBehavior.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 36,
                  "endLine": 28,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2629",
          "level": "warning",
          "message": "Don't use string interpolation in logging message templates.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/OneDrive/Trabajo/TecyLab/Curso%20Net%20y%20AWS/semana%2012/Estudiantes/src/Estudiantes/Estudiantes.Application/Abstractions/Behaviors/LoggingBehavior.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 34,
                  "endLine": 33,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/OneDrive/Trabajo/TecyLab/Curso%20Net%20y%20AWS/semana%2012/Estudiantes/src/Estudiantes/Estudiantes.Application/Abstractions/Behaviors/ValidationBehavior.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 38,
                  "endLine": 33,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/OneDrive/Trabajo/TecyLab/Curso%20Net%20y%20AWS/semana%2012/Estudiantes/src/Estudiantes/Estudiantes.Application/Abstractions/Behaviors/ValidationBehavior.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 12,
                  "endLine": 41,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/OneDrive/Trabajo/TecyLab/Curso%20Net%20y%20AWS/semana%2012/Estudiantes/src/Estudiantes/Estudiantes.Application/Abstractions/Behaviors/LoggingBehavior.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 36,
                  "endLine": 26,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/OneDrive/Trabajo/TecyLab/Curso%20Net%20y%20AWS/semana%2012/Estudiantes/src/Estudiantes/Estudiantes.Application/Abstractions/Behaviors/LoggingBehavior.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 36,
                  "endLine": 28,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, Exception?, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/OneDrive/Trabajo/TecyLab/Curso%20Net%20y%20AWS/semana%2012/Estudiantes/src/Estudiantes/Estudiantes.Application/Abstractions/Behaviors/LoggingBehavior.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 34,
                  "endLine": 33,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1860": {
          "id": "CA1860",
          "shortDescription": "Avoid using 'Enumerable.Any()' extension method",
          "fullDescription": "Prefer using 'IsEmpty', 'Count' or 'Length' properties whichever available, rather than calling 'Enumerable.Any()'. The intent is clearer and it is more performant than using 'Enumerable.Any()' extension method.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1860",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2254": {
          "id": "CA2254",
          "shortDescription": "Template should be a static expression",
          "fullDescription": "The logging message template should not vary between calls.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2254",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "S2139": {
          "id": "S2139",
          "shortDescription": "Exceptions should be either logged or rethrown but not both",
          "fullDescription": "When an exception is logged and rethrown, the upstream code may not be aware that the exception has already been logged. As a result, the same exception gets logged multiple times, making it difficult to identify the root cause of the issue. This can be particularly problematic in multi-threaded applications where messages from other threads can be interwoven with the repeated log entries.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2139",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2629": {
          "id": "S2629",
          "shortDescription": "Logging templates should be constant",
          "fullDescription": "Logging arguments should not require evaluation in order to avoid unnecessary performance overhead. When passing concatenated strings or string interpolations directly into a logging method, the evaluation of these expressions occurs every time the logging method is called, regardless of the log level. This can lead to inefficient code execution and increased resource consumption.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2629",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3376": {
          "id": "S3376",
          "shortDescription": "Attribute, EventArgs, and Exception type names should end with the type being extended",
          "fullDescription": "Adherence to the standard naming conventions makes your code not only more readable, but more usable. For instance, class FirstAttribute : Attribute can be used simply with First, but you must use the full name for class AttributeOne : Attribute.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3376",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6672": {
          "id": "S6672",
          "shortDescription": "Generic logger injection should match enclosing type",
          "fullDescription": "In most logging frameworks, it’s good practice to set the logger name to match its enclosing type, as enforced by {rule:csharpsquid:S3416}.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6672",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}